// ResultScreen.kt
@file:OptIn(ExperimentalMaterial3Api::class)
package com.tripchung.app.ui

import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.outlined.ArrowBack
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import coil.compose.rememberAsyncImagePainter

@Composable
fun ResultScreen(
    onBack: () -> Unit = {},
    onAddToPlan: (String) -> Unit = {}
) {
    Scaffold(
        topBar = {
            // ‚¨áÔ∏è SmallTopAppBar ‚Üí TopAppBar Î°ú ÍµêÏ≤¥
            TopAppBar(
                title = { Text("AI ÎßûÏ∂§ Ïó¨Ìñâ Ï∂îÏ≤ú", fontWeight = FontWeight.Bold) },
                navigationIcon = {
                    IconButton(onClick = onBack) {
                        Icon(Icons.Outlined.ArrowBack, contentDescription = "Îí§Î°ú")
                    }
                }
            )
        }
    ) { inner ->
        Column(
            Modifier
                .fillMaxSize()
                .padding(inner)
                .padding(16.dp),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            Text(
                "ÎãπÏã†Ïùò Ï∑®Ìñ•Ïóê ÎßûÎäî ÏôÑÎ≤ΩÌïú Ïó¨ÌñâÏßÄÎ•º Ï∞æÏïòÏñ¥Ïöî!",
                style = MaterialTheme.typography.bodyMedium,
                color = MaterialTheme.colorScheme.onSurfaceVariant
            )

            RecommendResultCard(
                title = "Í≥ÑÎ£°ÏÇ∞ Íµ≠Î¶ΩÍ≥µÏõê",
                tag = "ÏûêÏó∞/ÌûêÎßÅ",
                description = "Í∞ÄÏùÑ Îã®ÌíçÏù¥ ÏïÑÎ¶ÑÎã§Ïö¥ Î™ÖÏÇ∞ÏúºÎ°ú ÌûêÎßÅÍ≥º Ìä∏Î†àÌÇπÏùÑ ÎèôÏãúÏóê Ï¶êÍ∏∏ Ïàò ÏûàÏäµÎãàÎã§.",
                time = "‚è± 2-3ÏãúÍ∞Ñ",
                distance = "üìç 1.2km",
                imageUrl = "https://images.unsplash.com/photo-1501785888041-af3ef285b470?w=800",
                onAddToPlan = { onAddToPlan("Í≥ÑÎ£°ÏÇ∞ Íµ≠Î¶ΩÍ≥µÏõê") }
            )

            RecommendResultCard(
                title = "Î∂ÄÏó¨ Í∂ÅÎÇ®ÏßÄ",
                tag = "Ïó≠ÏÇ¨/Î¨∏Ìôî",
                description = "Î∞±Ï†úÏùò Ïó≠ÏÇ¨Í∞Ä ÏÇ¥ÏïÑÏûàÎäî Ïó∞Î™ªÏúºÎ°ú ÏÇ¨Í≥ÑÏ†à ÏïÑÎ¶ÑÎã§Ïö¥ ÌíçÍ≤ΩÏùÑ ÏûêÎûëÌï©ÎãàÎã§.",
                time = "‚è± 1-2ÏãúÍ∞Ñ",
                distance = "üìç 800m",
                imageUrl = "https://images.unsplash.com/photo-1470770841072-f978cf4d019e?w=800",
                onAddToPlan = { onAddToPlan("Î∂ÄÏó¨ Í∂ÅÎÇ®ÏßÄ") }
            )
        }
    }
}

@Composable
private fun RecommendResultCard(
    title: String,
    tag: String,
    description: String,
    time: String,
    distance: String,
    imageUrl: String,
    onAddToPlan: () -> Unit
) {
    ElevatedCard(
        shape = RoundedCornerShape(20.dp),
        modifier = Modifier.fillMaxWidth()
    ) {
        Column {
            Image(
                painter = rememberAsyncImagePainter(imageUrl),
                contentDescription = title,
                modifier = Modifier
                    .fillMaxWidth()
                    .height(140.dp),
                contentScale = ContentScale.Crop
            )

            Column(Modifier.padding(16.dp)) {
                Row(
                    horizontalArrangement = Arrangement.SpaceBetween,
                    verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier.fillMaxWidth()
                ) {
                    Text(title, fontWeight = FontWeight.Bold)
                    AssistChip(onClick = {}, label = { Text(tag) })
                }

                Spacer(Modifier.height(6.dp))
                Text(description, style = MaterialTheme.typography.bodyMedium)

                Spacer(Modifier.height(6.dp))
                Text("$time   $distance", color = Color.Gray)

                Spacer(Modifier.height(12.dp))
                Button(
                    onClick = onAddToPlan,
                    modifier = Modifier.fillMaxWidth(),
                    shape = RoundedCornerShape(12.dp)
                ) {
                    Text("ÏùºÏ†ïÏóê Ï∂îÍ∞Ä")
                }
            }
        }
    }
}
